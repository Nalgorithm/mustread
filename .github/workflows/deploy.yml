name: Deploy docker image

on:
  push:
    branches:
      - 'master'

jobs:

  build_docker_image:
    runs-on: ubuntu-18.04
    steps:

#     Build JAR:
      - uses: actions/checkout@v1
      - name: set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Maven Package
        run: mvn -B clean compile package -DskipTests -f ./server/mustread/pom.xml
        
#     Set global environment variables:
      - name: set global env
        id: global_env
        run: |
          echo "::set-output name=IMAGE_NAME::${GITHUB_REPOSITORY#*/}"
          echo "::set-output name=DOCKERHUB_IMAGE_NAME::ghcr.io/${GITHUB_REPOSITORY}/${GITHUB_REPOSITORY#*/}"

#     Build Docker image:
      - name: Build and tag image
        run: |
          docker build -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_SHA::8}" ./server/mustread

      - name: Docker login
        run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{secrets.GITHUB_TOKEN}}

#     Publish image to github package repository:
      - name: Publish image
        env:
          IMAGE_NAME: $GITHUB_REPOSITORY
        run: docker push "ghcr.io/$GITHUB_REPOSITORY/${{ steps.global_env.outputs.IMAGE_NAME }}"

#     Deploy postgres + spring app to remote
      - name: Docker-Compose Remote Deployment
        uses: TapTap21/docker-remote-deployment-action@v1.1
        with:
          remote_docker_host: elnikovss@178.154.251.113
          ssh_private_key: ${{ secrets.YANDEX_CLOUD_SSH }}
          ssh_public_key: ${{ secrets.YANDEX_CLOUD_SSH_PUB }}
          stack_file_name: docker-compose.yml
          docker_login_password: ${{ secrets.DOCKER_REPO_PASSWORD }}
          docker_login_user: ${{ secrets.DOCKER_REPO_USERNAME }}
          docker_login_registry : http://ghcr.io
          args: -p myapp up -d
            

